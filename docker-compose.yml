services:
  postgres:
    image: postgres:15.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    # env_file:
    #   - .env 
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    build:
      context: ./portfolio_be
      dockerfile: Dockerfile
    # env_file:
    #   - .env
    environment:
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DJANGO_SETTINGS_MODULE: "portfolio_be.settings"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    # No port mapping here; Nginx will proxy traffic

  vue:
    build:
      context: ./portfolio_fe
      dockerfile: Dockerfile
    # env_file:
    #   - .env
    # command: npm run serve -- --host 0.0.0.0
    command: npm run build -- --host 0.0.0.0
    networks:
      - backend
    # Expose the port on the container only
    expose:
      - "3000"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      # Optionally, if you want to serve Django static files from a shared volume:
      #- static_volume:/static
    depends_on:
      - django
      - vue
    networks:
      - backend

volumes:
  postgres_data:
  # static_volume:

networks:
  backend:
